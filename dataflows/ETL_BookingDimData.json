{
    "name": "BookingDataTransformation",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "CosmoDBBookingDataset",
                        "type": "DatasetReference"
                    },
                    "name": "BookingData"
                },
                {
                    "dataset": {
                        "referenceName": "SynapseSQLPoolBookingFactTable",
                        "type": "DatasetReference"
                    },
                    "name": "SynapseBookingFactTable"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "SynapseSQLPoolBookingFactTable",
                        "type": "DatasetReference"
                    },
                    "name": "SinkSynapseBookingFactTable",
                    "rejectedDataLinkedService": {
                        "referenceName": "AzureDataLakeStorage1",
                        "type": "LinkedServiceReference"
                    }
                }
            ],
            "transformations": [
                {
                    "name": "DataQualityCheck"
                },
                {
                    "name": "DerivedColumn"
                },
                {
                    "name": "JoinWithSynapse"
                },
                {
                    "name": "SetInsertAndUpdateAlterRowPolicies"
                },
                {
                    "name": "CastColumns"
                },
                {
                    "name": "SpecificColumns"
                },
                {
                    "name": "FinalColumns"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          booking_id as string,",
                "          property_id as string,",
                "          customer_id as string,",
                "          owner_id as string,",
                "          check_in_date as date,",
                "          check_out_date as date,",
                "          booking_date as date,",
                "          amount as double,",
                "          currency as string,",
                "          property_location as (city as string, country as string),",
                "          timestamp as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     enableChangeFeed: true,",
                "     changeFeedStartFromTheBeginning: false,",
                "     format: 'document',",
                "     systemColumns: false) ~> BookingData",
                "source(output(",
                "          booking_id as string,",
                "          property_id as string,",
                "          customer_id as integer,",
                "          owner_id as string,",
                "          check_in_date as date,",
                "          check_out_date as date,",
                "          booking_date as timestamp,",
                "          amount as double,",
                "          currency as string,",
                "          city as string,",
                "          country as string,",
                "          full_address as string,",
                "          stay_duration as long,",
                "          booking_year as integer,",
                "          booking_month as integer,",
                "          timestamp as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> SynapseBookingFactTable",
                "BookingData split(check_out_date<check_in_date,",
                "     disjoint: true) ~> DataQualityCheck@(BadRecords, AcceptedRecords)",
                "DataQualityCheck@AcceptedRecords derive(stay_duration = (toTimestamp(check_out_date)-toTimestamp(check_in_date)) / 86400000,",
                "          booking_year = year(booking_date),",
                "          booking_month = month(booking_date),",
                "          full_address = concat(property_location.city, ',', property_location.country),",
                "          city = property_location.city,",
                "          country = property_location.country,",
                "          booking_id = booking_id,",
                "          booking_date = booking_date,",
                "          check_out_date = check_out_date,",
                "          customer_id = customer_id,",
                "          timestamp = timestamp,",
                "          owner_id = owner_id,",
                "          check_in_date = check_in_date,",
                "          property_id = property_id,",
                "          amount = amount,",
                "          currency = currency) ~> DerivedColumn",
                "SpecificColumns, SynapseBookingFactTable lookup(SpecificColumns@booking_id == SynapseBookingFactTable@booking_id,",
                "     multiple: false,",
                "     pickup: 'first',",
                "     desc(SynapseBookingFactTable@timestamp, true),",
                "     broadcast: 'auto')~> JoinWithSynapse",
                "JoinWithSynapse alterRow(insertIf(isNull(SynapseBookingFactTable@booking_id)),",
                "     updateIf(not(isNull(SynapseBookingFactTable@booking_id)))) ~> SetInsertAndUpdateAlterRowPolicies",
                "DerivedColumn cast(output(",
                "          booking_id as string,",
                "          property_id as string,",
                "          customer_id as integer,",
                "          owner_id as string,",
                "          check_in_date as date,",
                "          check_out_date as date,",
                "          booking_date as timestamp,",
                "          amount as double,",
                "          currency as string,",
                "          property_location as (city as string, country as string),",
                "          timestamp as timestamp,",
                "          stay_duration as long,",
                "          booking_year as integer,",
                "          booking_month as integer,",
                "          full_address as string,",
                "          city as string,",
                "          country as string",
                "     ),",
                "     errors: true) ~> CastColumns",
                "CastColumns select(mapColumn(",
                "          booking_id,",
                "          property_id,",
                "          customer_id,",
                "          owner_id,",
                "          check_in_date,",
                "          check_out_date,",
                "          booking_date,",
                "          amount,",
                "          currency,",
                "          timestamp,",
                "          stay_duration,",
                "          booking_year,",
                "          booking_month,",
                "          full_address,",
                "          city,",
                "          country",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SpecificColumns",
                "SetInsertAndUpdateAlterRowPolicies select(mapColumn(",
                "          booking_id = SpecificColumns@booking_id,",
                "          property_id = SpecificColumns@property_id,",
                "          customer_id = SpecificColumns@customer_id,",
                "          owner_id = SpecificColumns@owner_id,",
                "          check_in_date = SpecificColumns@check_in_date,",
                "          check_out_date = SpecificColumns@check_out_date,",
                "          booking_date = SpecificColumns@booking_date,",
                "          amount = SpecificColumns@amount,",
                "          currency = SpecificColumns@currency,",
                "          timestamp = SpecificColumns@timestamp,",
                "          stay_duration = SpecificColumns@stay_duration,",
                "          booking_year = SpecificColumns@booking_year,",
                "          booking_month = SpecificColumns@booking_month,",
                "          full_address = SpecificColumns@full_address,",
                "          city = SpecificColumns@city,",
                "          country = SpecificColumns@country",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> FinalColumns",
                "FinalColumns sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          booking_id as string,",
                "          property_id as string,",
                "          customer_id as integer,",
                "          owner_id as string,",
                "          check_in_date as date,",
                "          check_out_date as date,",
                "          booking_date as timestamp,",
                "          amount as double,",
                "          currency as string,",
                "          city as string,",
                "          country as string,",
                "          full_address as string,",
                "          stay_duration as long,",
                "          booking_year as integer,",
                "          booking_month as integer,",
                "          timestamp as timestamp",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:true,",
                "     upsertable:false,",
                "     keys:['booking_id'],",
                "     format: 'table',",
                "     staged: true,",
                "     allowCopyCommand: true,",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     saveOrder: 1,",
                "     errorHandlingOption: 'stopOnFirstError') ~> SinkSynapseBookingFactTable"
            ]
        }
    }
}
